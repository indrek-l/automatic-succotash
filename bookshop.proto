syntax = "proto3";

message CreateChainRequest {}
message CreateChainResponse {}

message AddProcessToChainRequest {
    string process = 1;
    string predecessor = 2;
    string successor = 3;
}
message AddProcessToChainResponse {}

message AnnounceRoleRequest {
    string process = 1;
    string role = 2;
}
message AnnounceRoleResponse {}

message ListChainRequest {}
message ListChainResponse {}

message WriteRequest {
    string key = 1;
    string value = 2;
    float timestamp = 3;
}
message WriteResponse {}

message ReadRequest {
    string key = 1;
    float timestamp = 2;
}
message ReadResponse {
    string value = 1;
    float timestamp = 2;
}

message CreateProcessesRequest {
    int32 num_processes = 1;
}
message CreateProcessesResponse {}

message GetProcessNamesRequest {}
message GetProcessNamesResponse {
    repeated string process_names = 1;
}

message ListBooksRequest {}
message ListBooksResponse {}

message SetTimeoutRequest {}
message SetTimeoutResponse {}

message DataStatusRequest {}
message DataStatusResponse {}

message RemoveHeadRequest {}
message RemoveHeadResponse {}

message RestoreHeadRequest {}
message RestoreHeadResponse {}

service Bookshop {
    rpc create_chain (CreateChainRequest) returns (CreateChainResponse) {};
    rpc announce_role (AnnounceRoleRequest) returns (AnnounceRoleResponse) {};
    rpc add_process_to_chain (AddProcessToChainRequest) returns (AddProcessToChainResponse) {};
    rpc list_chain (ListChainRequest) returns (ListChainResponse) {};
    rpc write (WriteRequest) returns (WriteResponse) {};
    rpc read (ReadRequest) returns (ReadResponse) {};
    rpc create_processes (CreateProcessesRequest) returns (CreateProcessesResponse) {};
    rpc get_process_names (GetProcessNamesRequest) returns (GetProcessNamesResponse) {};
    rpc list_books (ListBooksRequest) returns (ListBooksResponse) {};
    rpc set_timeout (SetTimeoutRequest) returns (SetTimeoutResponse) {};
    rpc data_status (DataStatusRequest) returns (DataStatusResponse) {};
    rpc remove_head (RemoveHeadRequest) returns (RemoveHeadResponse) {};
    rpc restore_head (RestoreHeadRequest) returns (RestoreHeadResponse) {};
}
